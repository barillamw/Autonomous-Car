###############################################################################
#
# IAR C/C++ Compiler V7.12.1.987/W32 for MSP430           25/Mar/2019  17:49:19
# Copyright 1996-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 7.12
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project 07 -
#        OLD\intercept.c
#    Command line  =  
#        -f C:\Users\Michael\AppData\Local\Temp\EWFA4B.tmp
#        ("C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project 07 -
#        OLD\intercept.c" -lC "C:\Users\Michael\Documents\2019\ECE
#        306\ECE-306_code\Project 07 - OLD\Debug\List" -o
#        "C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project 07 -
#        OLD\Debug\Obj" --no_cse --no_unroll --no_inline --no_code_motion
#        --no_tbaa --debug -D__MSP430FR2355__ -e --double=32 --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\430\lib\dlib\dl430xlsfn.h" -I ./\ --core=430X --data_model=small
#        -On --multiplier=32 --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project 07 -
#        OLD\Debug\List\intercept.lst
#    Object file   =  
#        C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project 07 -
#        OLD\Debug\Obj\intercept.r43
#
###############################################################################

C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project 07 - OLD\intercept.c
      1          //------------------------------------------------------------------------------
      2          //
      3          //  Description: This file contains the functions to execute black line 
      4          //      detection and intercept.
      5          //
      6          //  Michael Barilla
      7          //  Mar 2019
      8          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (7.11.2)
      9          //------------------------------------------------------------------------------
     10          #include  "functions.h"
     11          #include  "msp430.h"

   \                                 In  segment DATA16_AN, at 0x386
   \   union <unnamed> _A_TB0CCTL2_L
   \                     _A_TB0CCTL2_L:
   \   000000                DS8 2
     12          #include "macros.h"
     13          #include <string.h>
     14          
     15          extern unsigned int R_average;
     16          extern unsigned int L_average;
     17          extern unsigned int V_Detect_R[MAX_ARRAY];
     18          extern unsigned int V_Detect_L[MAX_ARRAY];
     19          extern unsigned int R_count;
     20          extern unsigned int L_count;
     21          extern unsigned int black;
     22          extern unsigned int midpoint;
     23          extern char state;
     24          extern char display_line[FOURTH][COUNT_ELEVEN];
     25          extern volatile unsigned char display_changed;
     26          extern unsigned int capture;

   \                                 In  segment DATA16_I, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     27          unsigned int searching = HIGH;
   \                     searching:
   \   000000                DS8 2
   \   000002                REQUIRE `?<Initializer for searching>`

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     28          unsigned int endWait;
   \                     endWait:
   \   000000                DS8 2
     29          extern unsigned int newDrive;
     30          extern unsigned int waitTime;
     31          

   \                                 In  segment CODE, align 2
     32          void intercept(void){
   \                     intercept:
     33            displayADC();
   \   000000   ........     CALLA   #displayADC
     34            if(capture){
   \   000004   8293....     CMP.W   #0x0, &capture
   \   000008   4524         JEQ     ??intercept_0
     35              Read_ADC();
   \   00000A   ........     CALLA   #Read_ADC
     36              if(searching){
   \   00000E   8293....     CMP.W   #0x0, &searching
   \   000012   1924         JEQ     ??intercept_1
     37                  strcpy(display_line[FOURTH_LINE],"  SEARCH  ");
   \   000014   3D40....     MOV.W   #`?<Constant "  SEARCH  ">`, R13
   \   000018   3C40....     MOV.W   #display_line + 33, R12
   \   00001C   ........     CALLA   #strcpy
     38                  display_changed = HIGH;
   \   000020   D243....     MOV.B   #0x1, &display_changed
     39                  driveForward(SEARCH,SEARCH);
   \   000024   3D40A861     MOV.W   #0x61a8, R13
   \   000028   3C40A861     MOV.W   #0x61a8, R12
   \   00002C   ........     CALLA   #driveForward
     40                  if(R_average > midpoint || L_average > midpoint) searching = LOW;
   \   000030   9292........ CMP.W   &R_average, &midpoint
   \   000036   0428         JNC     ??intercept_2
   \   000038   9292........ CMP.W   &L_average, &midpoint
   \   00003E   2A2C         JC      ??intercept_0
   \                     ??intercept_2:
   \   000040   8243....     MOV.W   #0x0, &searching
   \   000044   1001         RETA
     41              }
     42             else{
     43              strcpy(display_line[FOURTH_LINE],"  FOUND  ");
   \                     ??intercept_1:
   \   000046   3D40....     MOV.W   #`?<Constant "  FOUND  ">`, R13
   \   00004A   3C40....     MOV.W   #display_line + 33, R12
   \   00004E   ........     CALLA   #strcpy
     44              display_changed = HIGH;
   \   000052   D243....     MOV.B   #0x1, &display_changed
     45              All_Wheel_Off();
   \   000056   ........     CALLA   #All_Wheel_Off
     46              waitTime = TWOSECS;
   \   00005A   B2402800.... MOV.W   #0x28, &waitTime
     47              TB0CCTL2 &=~ CCIFG;
   \   000060   92C38603     BIC.W   #0x1, &0x386
     48              TB0CCTL2 |= CCIE;
   \   000064   B2D010008603 BIS.W   #0x10, &0x386
     49              if(endWait){
   \   00006A   8293....     CMP.W   #0x0, &endWait
   \   00006E   1224         JEQ     ??intercept_0
     50                strcpy(display_line[SECOND_LINE],"  WAITING ");
   \   000070   3D40....     MOV.W   #`?<Constant "  WAITING ">`, R13
   \   000074   3C40....     MOV.W   #display_line + 11, R12
   \   000078   ........     CALLA   #strcpy
     51                TB0CCTL2 &= ~CCIE;
   \   00007C   B2C010008603 BIC.W   #0x10, &0x386
     52                state = TURN;
   \   000082   F2407400.... MOV.B   #0x74, &state
     53                capture = RESET;
   \   000088   8243....     MOV.W   #0x0, &capture
     54                endWait = RESET;
   \   00008C   8243....     MOV.W   #0x0, &endWait
     55                searching = LOW;
   \   000090   8243....     MOV.W   #0x0, &searching
     56                }
     57              }
     58             }
     59            }
   \                     ??intercept_0:
   \   000094   1001         RETA
   \   000096                REQUIRE _A_TB0CCTL2_L

   \                                 In  segment DATA16_ID, align 2, align-sorted
   \                     `?<Initializer for searching>`:
   \   000000   0100         DC16 1

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "  SEARCH  ">`:
   \   000000   202053454152 DC8 "  SEARCH  "
   \            4348202000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "  FOUND  ">`:
   \   000000   2020464F554E DC8 "  FOUND  "
   \            44202000    

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "  WAITING ">`:
   \   000000   202057414954 DC8 "  WAITING "
   \            494E472000  
     60          
     61          
     62          
     63            

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   intercept
        4   -> All_Wheel_Off
        4   -> Read_ADC
        4   -> displayADC
        4   -> driveForward
        4   -> strcpy


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      10  ?<Constant "  FOUND  ">
      11  ?<Constant "  SEARCH  ">
      11  ?<Constant "  WAITING ">
       2  ?<Initializer for searching>
       2  _A_TB0CCTL2_L
       2  endWait
     150  intercept
       2  searching

 
 150 bytes in segment CODE
   2 bytes in segment DATA16_AN
  32 bytes in segment DATA16_C
   2 bytes in segment DATA16_I
   2 bytes in segment DATA16_ID
   2 bytes in segment DATA16_Z
 
 150 bytes of CODE  memory
  34 bytes of CONST memory
   4 bytes of DATA  memory (+ 2 bytes shared)

Errors: none
Warnings: none
