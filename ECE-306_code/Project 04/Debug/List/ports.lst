###############################################################################
#
# IAR C/C++ Compiler V7.12.1.987/W32 for MSP430           22/Feb/2019  13:50:18
# Copyright 1996-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 7.12
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project
#        04\ports.c
#    Command line  =  
#        -f C:\Users\Michael\AppData\Local\Temp\EW5C10.tmp
#        ("C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project
#        04\ports.c" -lC "C:\Users\Michael\Documents\2019\ECE
#        306\ECE-306_code\Project 04\Debug\List" -o
#        "C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project
#        04\Debug\Obj" --no_cse --no_unroll --no_inline --no_code_motion
#        --no_tbaa --debug -D__MSP430FR2355__ -e --double=32 --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\430\lib\dlib\dl430xlsfn.h" -I ./\ --core=430X --data_model=small
#        -On --multiplier=32 --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project
#        04\Debug\List\ports.lst
#    Object file   =  
#        C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project
#        04\Debug\Obj\ports.r43
#
###############################################################################

C:\Users\Michael\Documents\2019\ECE 306\ECE-306_code\Project 04\ports.c
      1          //------------------------------------------------------------------------------
      2          //
      3          //  Description: This file contains the functions to initiate each of the ports 
      4          //  on the MSP430.
      5          //
      6          //  Michael Barilla
      7          //  Jan 2018
      8          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (7.11.2)
      9          //------------------------------------------------------------------------------
     10          
     11          #include  "functions.h"
     12          #include  "msp430.h"

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x204
   \   union <unnamed> _A_PADIR_L
   \                     _A_PADIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x206
   \   union <unnamed> _A_PAREN_L
   \                     _A_PAREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20a
   \   union <unnamed> _A_PASEL0_L
   \                     _A_PASEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20c
   \   union <unnamed> _A_PASEL1_L
   \                     _A_PASEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x224
   \   union <unnamed> _A_PBDIR_L
   \                     _A_PBDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x226
   \   union <unnamed> _A_PBREN_L
   \                     _A_PBREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22a
   \   union <unnamed> _A_PBSEL0_L
   \                     _A_PBSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22c
   \   union <unnamed> _A_PBSEL1_L
   \                     _A_PBSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x242
   \   union <unnamed> _A_PCOUT_L
   \                     _A_PCOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x244
   \   union <unnamed> _A_PCDIR_L
   \                     _A_PCDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x246
   \   union <unnamed> _A_PCREN_L
   \                     _A_PCREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24a
   \   union <unnamed> _A_PCSEL0_L
   \                     _A_PCSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24c
   \   union <unnamed> _A_PCSEL1_L
   \                     _A_PCSEL1_L:
   \   000000                DS8 2
     13          #include "macros.h"
     14          

   \                                 In  segment CODE, align 2
     15          void Init_Ports(){      //Calls the rest of the initalization functions
   \                     Init_Ports:
     16            Init_Port1();
   \   000000   ........     CALLA   #Init_Port1
     17            Init_Port2();
   \   000004   ........     CALLA   #Init_Port2
     18            Init_Port3();
   \   000008   ........     CALLA   #Init_Port3
     19            Init_Port4();
   \   00000C   ........     CALLA   #Init_Port4
     20            Init_Port5();
   \   000010   ........     CALLA   #Init_Port5
     21            Init_Port6();
   \   000014   ........     BRA     #Init_Port6
     22          }
     23            
     24          //------------------------------------------------------------------------------
     25          //
     26          //  Michael Barilla
     27          //  Jan 2018
     28          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (7.11.2)
     29          //
     30          //   Description: This function initalizes all of the pins on port 1
     31          //      Pin 0 - RED LED output
     32          //      Pin 1 - Unused SEEED Function Pin
     33          //      Pin 2 - Voltage Detect Left ADC
     34          //      Pin 3 - Voltage Detect Right ADC
     35          //      Pin 4 - Unused SEEED Function Pin
     36          //      Pin 5 - Voltage Thumb Function
     37          //      Pin 6 - UCA0TXD Function
     38          //      Pin 7 - UCA0RXD Function
     39          //
     40          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
     41          void Init_Port1() {     
   \                     Init_Port1:
     42            P1SEL1 = RESET;               //Set P1 Select 1 to Low
   \   000000   C2430C02     MOV.B   #0x0, &0x20c
     43            P1SEL0 = RESET;               //Set P1 Select 0 to Low
   \   000004   C2430A02     MOV.B   #0x0, &0x20a
     44            P1OUT = RESET;                //Set P1 Intial Value to Low
   \   000008   C2430202     MOV.B   #0x0, &0x202
     45            P1DIR = FULL;                 //Set P1 Direction to Output
   \   00000C   F2430402     MOV.B   #0xff, &0x204
     46            P1REN = RESET;                //Set P1 Resistor Enable to Low
   \   000010   C2430602     MOV.B   #0x0, &0x206
     47            
     48            P1SEL0 &= ~RED_LED;           //RED_LED GPIO operation (00)
   \   000014   D2C30A02     BIC.B   #0x1, &0x20a
     49            P1SEL1 &= ~RED_LED;           
   \   000018   D2C30C02     BIC.B   #0x1, &0x20c
     50            P1OUT &= ~RED_LED;            //Initial Value = 0 [OFF]
   \   00001C   D2C30202     BIC.B   #0x1, &0x202
     51            P1DIR |= RED_LED;             //Direction = Output
   \   000020   D2D30402     BIS.B   #0x1, &0x204
     52          
     53            P1SEL0 |= A1_SEEED;            //A1_SEEED Function Operation (11)
   \   000024   E2D30A02     BIS.B   #0x2, &0x20a
     54            P1SEL1 |= A1_SEEED;            
   \   000028   E2D30C02     BIS.B   #0x2, &0x20c
     55            
     56            P1SEL0 |= V_DETECT_L;         //V_DETECT_L Function Operation (11)
   \   00002C   E2D20A02     BIS.B   #0x4, &0x20a
     57            P1SEL1 |= V_DETECT_L;         
   \   000030   E2D20C02     BIS.B   #0x4, &0x20c
     58            
     59            P1SEL0 |= V_DETECT_R;         //V_DETECT_R Function Operation (11)
   \   000034   F2D20A02     BIS.B   #0x8, &0x20a
     60            P1SEL1 |= V_DETECT_R;         
   \   000038   F2D20C02     BIS.B   #0x8, &0x20c
     61            
     62            P1SEL0 |= A4_SEEED;           //A4_SEEED Function Operation (11)
   \   00003C   F2D010000A02 BIS.B   #0x10, &0x20a
     63            P1SEL1 |= A4_SEEED;           
   \   000042   F2D010000C02 BIS.B   #0x10, &0x20c
     64            
     65            P1SEL0 |= V_THUMB;            //V_THUMB Function Operation (11)
   \   000048   F2D020000A02 BIS.B   #0x20, &0x20a
     66            P1SEL1 |= V_THUMB;            
   \   00004E   F2D020000C02 BIS.B   #0x20, &0x20c
     67            
     68            P1SEL0 |= UCA0TXD;            //UCA0TXD Function Operation (01)
   \   000054   F2D080000A02 BIS.B   #0x80, &0x20a
     69            P1SEL1 &= ~UCA0TXD;           
   \   00005A   F2C080000C02 BIC.B   #0x80, &0x20c
     70            
     71            P1SEL0 |= UCA0RXD;            //UCA0RXD Function Operation (01)
   \   000060   F2D040000A02 BIS.B   #0x40, &0x20a
     72            P1SEL1 &= ~UCA0RXD;           
   \   000066   F2C040000C02 BIC.B   #0x40, &0x20c
     73          }
   \   00006C   1001         RETA
   \   00006E                REQUIRE _A_PASEL1_L
   \   00006E                REQUIRE _A_PASEL0_L
   \   00006E                REQUIRE _A_PAOUT_L
   \   00006E                REQUIRE _A_PADIR_L
   \   00006E                REQUIRE _A_PAREN_L
     74          
     75          //------------------------------------------------------------------------------
     76          //
     77          //  Michael Barilla
     78          //  Jan 2018
     79          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (7.11.2)
     80          //
     81          //   Description: This function initalizes all of the pins on port 2
     82          //      Pin 0 - Unused GPIO
     83          //      Pin 1 - Unused GPIO
     84          //      Pin 2 - Unused GPIO
     85          //      Pin 3 - Pull up Switch 2
     86          //      Pin 4 - Unused GPIO
     87          //      Pin 5 - Unused GPIO
     88          //      Pin 6 - Low Frequency Clock Out
     89          //      Pin 7 - Low Frequency Clock In
     90          //
     91          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
     92          void Init_Port2(){ 
   \                     Init_Port2:
     93            P2SEL1 = RESET;               //Set P2 Select 1 to Low
   \   000000   C2430D02     MOV.B   #0x0, &0x20d
     94            P2SEL0 = RESET;               //Set P2 Select 0 to Low
   \   000004   C2430B02     MOV.B   #0x0, &0x20b
     95            P2OUT = RESET;                //Set P2 inital value to Low
   \   000008   C2430302     MOV.B   #0x0, &0x203
     96            P2DIR = FULL;                 //Set P2 direction to output
   \   00000C   F2430502     MOV.B   #0xff, &0x205
     97            P2REN = RESET;                //Set P2 Resistor Enable to Low
   \   000010   C2430702     MOV.B   #0x0, &0x207
     98            
     99            P2SEL0 &= ~P2_0;              //P2_0 GPIO operation (00)
   \   000014   D2C30B02     BIC.B   #0x1, &0x20b
    100            P2SEL1 &= ~P2_0;              
   \   000018   D2C30D02     BIC.B   #0x1, &0x20d
    101            P2DIR &= ~P2_0;               //Direction = input
   \   00001C   D2C30502     BIC.B   #0x1, &0x205
    102            
    103            P2SEL0 &= ~P2_1;              //P2_1 GPIO operation (00)
   \   000020   E2C30B02     BIC.B   #0x2, &0x20b
    104            P2SEL1 &= ~P2_1;              
   \   000024   E2C30D02     BIC.B   #0x2, &0x20d
    105            P2DIR &= ~P2_1;               //Direction = input 
   \   000028   E2C30502     BIC.B   #0x2, &0x205
    106            
    107            P2SEL0 &= ~P2_2;              //P2_2 GPIO operation (00)
   \   00002C   E2C20B02     BIC.B   #0x4, &0x20b
    108            P2SEL1 &= ~P2_2;              
   \   000030   E2C20D02     BIC.B   #0x4, &0x20d
    109            P2DIR &= ~P2_2;               //Direction = input
   \   000034   E2C20502     BIC.B   #0x4, &0x205
    110            
    111            P2SEL0 &= ~SW2;               //SW2 operation
   \   000038   F2C20B02     BIC.B   #0x8, &0x20b
    112            P2SEL1 &= ~SW2;               //SW2 operation
   \   00003C   F2C20D02     BIC.B   #0x8, &0x20d
    113            P2DIR &= ~SW2;                //Direction = input
   \   000040   F2C20502     BIC.B   #0x8, &0x205
    114            P2OUT |= SW2;                 //Configure pullup resistor
   \   000044   F2D20302     BIS.B   #0x8, &0x203
    115            P2REN |= SW2;                 //Enable pullup resistor
   \   000048   F2D20702     BIS.B   #0x8, &0x207
    116            //    P2IES |= SW2;                   //P2.0 Hi/Lo edge interrupt
    117            //    P2IFG &= ~SW2;                  //Clear all P2.6 inerrupt flags
    118            //    P2IE |= SW2;                    //P2.6 interrupt enabled
    119            
    120            P2SEL0 &= ~P2_4;              //P2_4 GPIO operation (00)
   \   00004C   F2C010000B02 BIC.B   #0x10, &0x20b
    121            P2SEL1 &= ~P2_4;              
   \   000052   F2C010000D02 BIC.B   #0x10, &0x20d
    122            P2DIR &= ~P2_4;               //Direction = input
   \   000058   F2C010000502 BIC.B   #0x10, &0x205
    123            
    124            P2SEL0 &= ~P2_5;              //P2_5 GPIO operation (00)
   \   00005E   F2C020000B02 BIC.B   #0x20, &0x20b
    125            P2SEL1 &= ~P2_5;              
   \   000064   F2C020000D02 BIC.B   #0x20, &0x20d
    126            P2DIR &= ~P2_5;               //Diretion = input
   \   00006A   F2C020000502 BIC.B   #0x20, &0x205
    127            
    128            P2SEL0 &= ~LFXOUT;            //LFXOUT Clock operation (10)
   \   000070   F2C040000B02 BIC.B   #0x40, &0x20b
    129            P2SEL1 |= LFXOUT;             
   \   000076   F2D040000D02 BIS.B   #0x40, &0x20d
    130            
    131            P2SEL0 &= ~LFXIN;             //LFXIN Clock operation (10)
   \   00007C   F2C080000B02 BIC.B   #0x80, &0x20b
    132            P2SEL1 |= LFXIN;              
   \   000082   F2D080000D02 BIS.B   #0x80, &0x20d
    133           //-----------------------------------------------------------------------------
    134          }
   \   000088   1001         RETA
   \   00008A                REQUIRE _A_PASEL1_L
   \   00008A                REQUIRE _A_PASEL0_L
   \   00008A                REQUIRE _A_PAOUT_L
   \   00008A                REQUIRE _A_PADIR_L
   \   00008A                REQUIRE _A_PAREN_L
    135          
    136          //------------------------------------------------------------------------------
    137          //
    138          //  Michael Barilla
    139          //  Jan 2018
    140          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (7.11.2)
    141          //
    142          //   Description: This function initalizes all of the pins on port 3
    143          //      Pin 0 - Test Probe Input
    144          //      Pin 1 - OA20 Function
    145          //      Pin 2 - OA2 Neg Function
    146          //      Pin 3 - OA2 Pos Function
    147          //      Pin 4 - SM Clock Output
    148          //      Pin 5 - Unused GPIO
    149          //      Pin 6 - IOT Link
    150          //      Pin 7 - Unused GPIO
    151          //
    152          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    153          void Init_Port3(){             
   \                     Init_Port3:
    154            P3SEL1 = RESET;               //Set P3 Select 1 to Low
   \   000000   C2432C02     MOV.B   #0x0, &0x22c
    155            P3SEL0 = RESET;               //Set P3 Select 0 to Low
   \   000004   C2432A02     MOV.B   #0x0, &0x22a
    156            P3OUT = RESET;                //Set P3 Initial Value to Low
   \   000008   C2432202     MOV.B   #0x0, &0x222
    157            P3DIR = FULL;                 //Set P3 Direction to Output
   \   00000C   F2432402     MOV.B   #0xff, &0x224
    158            P3REN = RESET;                //Set P3 Resistor Enable to Low
   \   000010   C2432602     MOV.B   #0x0, &0x226
    159            
    160            P3SEL0 &= ~TEST_PROBE;        //TEST_PROBE GPIO Operation (00)
   \   000014   D2C32A02     BIC.B   #0x1, &0x22a
    161            P3SEL1 &= ~TEST_PROBE;        
   \   000018   D2C32C02     BIC.B   #0x1, &0x22c
    162            
    163            P3SEL0 |= OA20;               //Function Operation (11)
   \   00001C   E2D32A02     BIS.B   #0x2, &0x22a
    164            P3SEL1 |= OA20;       
   \   000020   E2D32C02     BIS.B   #0x2, &0x22c
    165            
    166            P3SEL0 |= OA2N;               //Function Operation (11)
   \   000024   E2D22A02     BIS.B   #0x4, &0x22a
    167            P3SEL1 |= OA2N;       
   \   000028   E2D22C02     BIS.B   #0x4, &0x22c
    168            
    169            P3SEL0 |= OA2P;               //Function Operation (11)
   \   00002C   F2D22A02     BIS.B   #0x8, &0x22a
    170            P3SEL1 |= OA2P;       
   \   000030   F2D22C02     BIS.B   #0x8, &0x22c
    171            
    172            P3SEL0 |= SMCLK_OUT;          //Function Operation (01)
   \   000034   F2D010002A02 BIS.B   #0x10, &0x22a
    173            P3SEL1 &= ~SMCLK_OUT; 
   \   00003A   F2C010002C02 BIC.B   #0x10, &0x22c
    174            
    175            P3SEL0 &= ~P3_5;              //GPIO Operation (00)
   \   000040   F2C020002A02 BIC.B   #0x20, &0x22a
    176            P3SEL1 &= ~P3_5;
   \   000046   F2C020002C02 BIC.B   #0x20, &0x22c
    177            P3DIR &= ~P3_5;               //Sets Direction to Input
   \   00004C   F2C020002402 BIC.B   #0x20, &0x224
    178          
    179            P3SEL0 &= ~IOT_LINK;          //GPIO Operation (00)
   \   000052   F2C040002A02 BIC.B   #0x40, &0x22a
    180            P3SEL1 &= ~IOT_LINK;  
   \   000058   F2C040002C02 BIC.B   #0x40, &0x22c
    181            P3DIR &= ~IOT_LINK;           //Sets Direction to Input
   \   00005E   F2C040002402 BIC.B   #0x40, &0x224
    182            
    183            P3SEL0 &= ~P3_7;              //GPIO Operation (00)
   \   000064   F2C080002A02 BIC.B   #0x80, &0x22a
    184            P3SEL1 &= ~P3_7;      
   \   00006A   F2C080002C02 BIC.B   #0x80, &0x22c
    185            P3DIR &= ~IOT_LINK;           //Sets Direction to Input
   \   000070   F2C040002402 BIC.B   #0x40, &0x224
    186          }
   \   000076   1001         RETA
   \   000078                REQUIRE _A_PBSEL1_L
   \   000078                REQUIRE _A_PBSEL0_L
   \   000078                REQUIRE _A_PBOUT_L
   \   000078                REQUIRE _A_PBDIR_L
   \   000078                REQUIRE _A_PBREN_L
    187          
    188          //------------------------------------------------------------------------------
    189          //
    190          //  Michael Barilla
    191          //  Jan 2018
    192          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (7.11.2)
    193          //
    194          //   Description: This function initalizes all of the pins on port 4
    195          //      Pin 0 - Reset the LCD 
    196          //      Pin 1 - Pull up Switch 1
    197          //      Pin 2 - UCA1RXD Function
    198          //      Pin 3 - UCA1TXD Function
    199          //      Pin 4 - UCB1_CS_LCD GPIO Pin
    200          //      Pin 5 - UCB1CLK Function
    201          //      Pin 6 - UCB1SIMO Function
    202          //      Pin 7 - UCB1SOMI Function
    203          //
    204          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    205          void Init_Port4(){             
   \                     Init_Port4:
    206            P4SEL0 = RESET;               //Set P4 Select 0 to Low
   \   000000   C2432B02     MOV.B   #0x0, &0x22b
    207            P4SEL1 = RESET;               //Set P4 Select 1 to Low
   \   000004   C2432D02     MOV.B   #0x0, &0x22d
    208            P4OUT = RESET;                //Set P4 Inital Value to Low
   \   000008   C2432302     MOV.B   #0x0, &0x223
    209            P4DIR = FULL;                 //Set P4 Direction to Output
   \   00000C   F2432502     MOV.B   #0xff, &0x225
    210            P4REN = RESET;                //Set P Resistor Enable to Low
   \   000010   C2432702     MOV.B   #0x0, &0x227
    211            
    212            P4SEL0 &= ~RESET_LCD;         //RESET_LCD GPIO Operation (00)
   \   000014   D2C32B02     BIC.B   #0x1, &0x22b
    213            P4SEL1 &= ~RESET_LCD;
   \   000018   D2C32D02     BIC.B   #0x1, &0x22d
    214            P4OUT &= ~RESET_LCD;          //Initial Value to 0
   \   00001C   D2C32302     BIC.B   #0x1, &0x223
    215            P4DIR |= RESET_LCD;           //Direction = Input
   \   000020   D2D32502     BIS.B   #0x1, &0x225
    216            
    217            P4SEL0 &= ~SW1;               //SW1 operation (00)
   \   000024   E2C32B02     BIC.B   #0x2, &0x22b
    218            P4SEL1 &= ~SW1;      
   \   000028   E2C32D02     BIC.B   #0x2, &0x22d
    219            P4DIR &= ~SW1;                //Direction = input
   \   00002C   E2C32502     BIC.B   #0x2, &0x225
    220            P4OUT |= SW1;                 //Configure pullup resistor
   \   000030   E2D32302     BIS.B   #0x2, &0x223
    221            P4REN |= SW1;                 //Enable pullup resistor
   \   000034   E2D32702     BIS.B   #0x2, &0x227
    222            //    P4IES |= SW1;                   //P2.0 Hi/Lo edge interrupt
    223            //    P4IFG &= ~SW1;                  //Clear all P2.6 inerrupt flags
    224            //    P4IE |= SW1;                    //P2.6 interrupt enabled
    225            
    226            P4SEL0 |= UCA1RXD;            //UCA1RXD Function Operation (01)
   \   000038   E2D22B02     BIS.B   #0x4, &0x22b
    227            P4SEL1 &= ~UCA1RXD;   
   \   00003C   E2C22D02     BIC.B   #0x4, &0x22d
    228            
    229            P4SEL0 |= UCA1TXD;            //UCA1TXD Function Operation (01)
   \   000040   F2D22B02     BIS.B   #0x8, &0x22b
    230            P4SEL1 &= ~UCA1TXD;  
   \   000044   F2C22D02     BIC.B   #0x8, &0x22d
    231            
    232            P4SEL0 &= ~UCB1_CS_LCD;       //GPIO Operation (00)
   \   000048   F2C010002B02 BIC.B   #0x10, &0x22b
    233            P4SEL1 &= ~UCB1_CS_LCD;
   \   00004E   F2C010002D02 BIC.B   #0x10, &0x22d
    234            P4OUT &= ~UCB1_CS_LCD;        //Initial Value = 0
   \   000054   F2C010002302 BIC.B   #0x10, &0x223
    235            P4DIR |= UCB1_CS_LCD;         //Direction = Input
   \   00005A   F2D010002502 BIS.B   #0x10, &0x225
    236            
    237            P4SEL0 |= UCB1CLK;            //UCB1CLK Function Operation (01)
   \   000060   F2D020002B02 BIS.B   #0x20, &0x22b
    238            P4SEL1 &= ~UCB1CLK;   
   \   000066   F2C020002D02 BIC.B   #0x20, &0x22d
    239            
    240            P4SEL0 |= UCB1SIMO;            //UCB1SIMO Function Operation (01)
   \   00006C   F2D040002B02 BIS.B   #0x40, &0x22b
    241            P4SEL1 &= ~UCB1SIMO;           
   \   000072   F2C040002D02 BIC.B   #0x40, &0x22d
    242            
    243            P4SEL0 |= UCB1SOMI;           //UCB1SOMI Function Operation (01)
   \   000078   F2D080002B02 BIS.B   #0x80, &0x22b
    244            P4SEL1 &= ~UCB1SOMI;  
   \   00007E   F2C080002D02 BIC.B   #0x80, &0x22d
    245          }
   \   000084   1001         RETA
   \   000086                REQUIRE _A_PBSEL0_L
   \   000086                REQUIRE _A_PBSEL1_L
   \   000086                REQUIRE _A_PBOUT_L
   \   000086                REQUIRE _A_PBDIR_L
   \   000086                REQUIRE _A_PBREN_L
    246          
    247          //------------------------------------------------------------------------------
    248          //
    249          //  Michael Barilla
    250          //  Jan 2018
    251          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (7.11.2)
    252          //
    253          //   Description: This function initalizes all of the pins on port 5
    254          //      Pin 0 - Reset IOT
    255          //      Pin 1 - Unused GPIO
    256          //      Pin 2 - IOT Program Selector
    257          //      Pin 3 - IOT Program Mode
    258          //      Pin 4 - InfraRed LED
    259          //
    260          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    261          void Init_Port5(){ 
   \                     Init_Port5:
    262            P5SEL0 = RESET;               //Set P5 Select 0 to Low
   \   000000   C2434A02     MOV.B   #0x0, &0x24a
    263            P5SEL1 = RESET;               //Set P5 Select 1 to Low
   \   000004   C2434C02     MOV.B   #0x0, &0x24c
    264            P5OUT = RESET;                //Set P5 Initial Value Low
   \   000008   C2434202     MOV.B   #0x0, &0x242
    265            P5DIR = FULL;                 //Set P5 Direction to Output
   \   00000C   F2434402     MOV.B   #0xff, &0x244
    266            P5REN = RESET;                //SET P5 Resistor Enable to Low
   \   000010   C2434602     MOV.B   #0x0, &0x246
    267            
    268            P5SEL0 &= ~IOT_RESET;         //IOT_RESET GPIO Operation (00)
   \   000014   D2C34A02     BIC.B   #0x1, &0x24a
    269            P5SEL1 &= ~IOT_RESET;         
   \   000018   D2C34C02     BIC.B   #0x1, &0x24c
    270            P5OUT &= ~IOT_RESET;          //Initial Value = 0
   \   00001C   D2C34202     BIC.B   #0x1, &0x242
    271            P5DIR |= IOT_RESET;           //Direction = Output
   \   000020   D2D34402     BIS.B   #0x1, &0x244
    272            
    273            P5SEL0 &= ~P5_1;              //P5_1 GPIO Operation (00)
   \   000024   E2C34A02     BIC.B   #0x2, &0x24a
    274            P5SEL1 &= ~P5_1;              
   \   000028   E2C34C02     BIC.B   #0x2, &0x24c
    275            P5DIR &= ~P5_1;               //Direction = Input
   \   00002C   E2C34402     BIC.B   #0x2, &0x244
    276            
    277            P5SEL0 &= ~IOT_PROG_SEL;      //IOT_PROG_SEL GPIO Operation (00)
   \   000030   E2C24A02     BIC.B   #0x4, &0x24a
    278            P5SEL1 &= ~IOT_PROG_SEL;      
   \   000034   E2C24C02     BIC.B   #0x4, &0x24c
    279            P5DIR &= ~IOT_PROG_SEL;       //Direction = Input
   \   000038   E2C24402     BIC.B   #0x4, &0x244
    280            
    281            P5SEL0 &= ~IOT_PROG_MODE;      //IOT_PROG_MODE GPIO Operation (00)
   \   00003C   F2C24A02     BIC.B   #0x8, &0x24a
    282            P5SEL1 &= ~IOT_PROG_MODE;
   \   000040   F2C24C02     BIC.B   #0x8, &0x24c
    283            P5DIR &= ~IOT_PROG_MODE;      //Direction = Input
   \   000044   F2C24402     BIC.B   #0x8, &0x244
    284            
    285            
    286            
    287          }
   \   000048   1001         RETA
   \   00004A                REQUIRE _A_PCSEL0_L
   \   00004A                REQUIRE _A_PCSEL1_L
   \   00004A                REQUIRE _A_PCOUT_L
   \   00004A                REQUIRE _A_PCDIR_L
   \   00004A                REQUIRE _A_PCREN_L
    288          
    289          //------------------------------------------------------------------------------
    290          //
    291          //  Michael Barilla
    292          //  Jan 2018
    293          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (7.11.2)
    294          //
    295          //   Description: This function initalizes all of the pins on port 5
    296          //      Pin 0 - Right Motor Forward Output
    297          //      Pin 1 - Left Motor Forward Output
    298          //      Pin 2 - Right Motor Reverse Output 
    299          //      Pin 3 - Left Motor Reverse Output
    300          //      Pin 4 - LCD Backlight
    301          //      Pin 5 - Unsued GPIO
    302          //      Pin 6 - Green LED output
    303          //
    304          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    305          void Init_Port6(){ 
   \                     Init_Port6:
    306            P6SEL0 = RESET;               //Set P6 Select 0 to Low
   \   000000   C2434B02     MOV.B   #0x0, &0x24b
    307            P6SEL1 = RESET;               //Set P6 Select 1 to Low
   \   000004   C2434D02     MOV.B   #0x0, &0x24d
    308            P6OUT = RESET;                //Set P6 Initial Value Low
   \   000008   C2434302     MOV.B   #0x0, &0x243
    309            P6DIR = FULL;                 //Set P6 Direction to Output
   \   00000C   F2434502     MOV.B   #0xff, &0x245
    310            P6REN = RESET;                //SET P6 Resistor Enable to Low
   \   000010   C2434702     MOV.B   #0x0, &0x247
    311            
    312            P6SEL0 &= ~R_FORWARD;         //R_FORWARD GPIO Operation (00)
   \   000014   D2C34B02     BIC.B   #0x1, &0x24b
    313            P6SEL1 &= ~R_FORWARD;
   \   000018   D2C34D02     BIC.B   #0x1, &0x24d
    314            P6OUT &= ~R_FORWARD;          //Initial Value = 0
   \   00001C   D2C34302     BIC.B   #0x1, &0x243
    315            P6DIR |= R_FORWARD;           //Direction = Output
   \   000020   D2D34502     BIS.B   #0x1, &0x245
    316            
    317            P6SEL0 &= ~L_FORWARD;         //L_FORWARD GPIO Operation (00)
   \   000024   E2C34B02     BIC.B   #0x2, &0x24b
    318            P6SEL1 &= ~L_FORWARD;         
   \   000028   E2C34D02     BIC.B   #0x2, &0x24d
    319            P6OUT &= ~L_FORWARD;          //Initial Value = 0
   \   00002C   E2C34302     BIC.B   #0x2, &0x243
    320            P6DIR |= L_FORWARD;           //Direction = Output
   \   000030   E2D34502     BIS.B   #0x2, &0x245
    321            
    322            P6SEL0 &= ~R_REVERSE;         //R_REVERSE GPIO Operation (00)
   \   000034   E2C24B02     BIC.B   #0x4, &0x24b
    323            P6SEL1 &= ~R_REVERSE;
   \   000038   E2C24D02     BIC.B   #0x4, &0x24d
    324            P6OUT |= R_REVERSE;          //Initial Value = 0
   \   00003C   E2D24302     BIS.B   #0x4, &0x243
    325            P6DIR |= R_REVERSE;           //Direction = Output
   \   000040   E2D24502     BIS.B   #0x4, &0x245
    326            
    327            P6SEL0 &= ~L_REVERSE;         //L_REVERSE GPIO Operation (00)
   \   000044   F2C24B02     BIC.B   #0x8, &0x24b
    328            P6SEL1 &= ~L_REVERSE;         
   \   000048   F2C24D02     BIC.B   #0x8, &0x24d
    329            P6OUT |= L_REVERSE;          //Initial Value = 0
   \   00004C   F2D24302     BIS.B   #0x8, &0x243
    330            P6DIR |= L_REVERSE;           //Direction = Output
   \   000050   F2D24502     BIS.B   #0x8, &0x245
    331            
    332            P6SEL0 &= ~LCD_BACKLITE;      //LCD_BACKLITE GPIO Operation (00)
   \   000054   F2C010004B02 BIC.B   #0x10, &0x24b
    333            P6SEL1 &= ~LCD_BACKLITE;
   \   00005A   F2C010004D02 BIC.B   #0x10, &0x24d
    334            P6OUT |= LCD_BACKLITE;       //Initial Value = 1
   \   000060   F2D010004302 BIS.B   #0x10, &0x243
    335            P6DIR |= LCD_BACKLITE;        //Direction = Output
   \   000066   F2D010004502 BIS.B   #0x10, &0x245
    336            
    337            P6SEL0 &= ~P6_5;              //P6_5 GPIO Operation (00)
   \   00006C   F2C020004B02 BIC.B   #0x20, &0x24b
    338            P6SEL1 &= ~P6_5;              
   \   000072   F2C020004D02 BIC.B   #0x20, &0x24d
    339            P6DIR &= ~P6_5;               //Direction = Output
   \   000078   F2C020004502 BIC.B   #0x20, &0x245
    340            
    341            P6SEL0 &= ~GRN_LED;           //GRN_LED GPIO Operation (00)
   \   00007E   F2C040004B02 BIC.B   #0x40, &0x24b
    342            P6SEL1 &= ~GRN_LED;
   \   000084   F2C040004D02 BIC.B   #0x40, &0x24d
    343            P6OUT &= ~GRN_LED;            //Initial Value = 0
   \   00008A   F2C040004302 BIC.B   #0x40, &0x243
    344            P6DIR |= GRN_LED;             //Direction Output  
   \   000090   F2D040004502 BIS.B   #0x40, &0x245
    345            
    346          }
   \   000096   1001         RETA
   \   000098                REQUIRE _A_PCSEL0_L
   \   000098                REQUIRE _A_PCSEL1_L
   \   000098                REQUIRE _A_PCOUT_L
   \   000098                REQUIRE _A_PCDIR_L
   \   000098                REQUIRE _A_PCREN_L
    347          
    348          
    349          
    350          
    351          
    352                
    353            

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Port1
      4   Init_Port2
      4   Init_Port3
      4   Init_Port4
      4   Init_Port5
      4   Init_Port6
      4   Init_Ports
        4   -> Init_Port1
        4   -> Init_Port2
        4   -> Init_Port3
        4   -> Init_Port4
        4   -> Init_Port5
        0   -> Init_Port6


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
     110  Init_Port1
     138  Init_Port2
     120  Init_Port3
     134  Init_Port4
      74  Init_Port5
     152  Init_Port6
      24  Init_Ports
       2  _A_PADIR_L
       2  _A_PAOUT_L
       2  _A_PAREN_L
       2  _A_PASEL0_L
       2  _A_PASEL1_L
       2  _A_PBDIR_L
       2  _A_PBOUT_L
       2  _A_PBREN_L
       2  _A_PBSEL0_L
       2  _A_PBSEL1_L
       2  _A_PCDIR_L
       2  _A_PCOUT_L
       2  _A_PCREN_L
       2  _A_PCSEL0_L
       2  _A_PCSEL1_L

 
 752 bytes in segment CODE
  30 bytes in segment DATA16_AN
 
 752 bytes of CODE memory
   0 bytes of DATA memory (+ 30 bytes shared)

Errors: none
Warnings: none
